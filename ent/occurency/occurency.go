// Code generated by entc, DO NOT EDIT.

package occurency

const (
	// Label holds the string label denoting the occurency type in the database.
	Label = "occurency"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldReportedRecord holds the string denoting the reportedrecord field in the database.
	FieldReportedRecord = "reported_record"
	// FieldResultDate holds the string denoting the resultdate field in the database.
	FieldResultDate = "result_date"
	// FieldBiologicalSex holds the string denoting the biologicalsex field in the database.
	FieldBiologicalSex = "biological_sex"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"

	// EdgeRegion holds the string denoting the region edge name in mutations.
	EdgeRegion = "region"
	// EdgeProvince holds the string denoting the province edge name in mutations.
	EdgeProvince = "province"
	// EdgeDistrict holds the string denoting the district edge name in mutations.
	EdgeDistrict = "district"

	// Table holds the table name of the occurency in the database.
	Table = "occurencies"
	// RegionTable is the table the holds the region relation/edge.
	RegionTable = "occurencies"
	// RegionInverseTable is the table name for the Region entity.
	// It exists in this package in order to avoid circular dependency with the "region" package.
	RegionInverseTable = "regions"
	// RegionColumn is the table column denoting the region relation/edge.
	RegionColumn = "occurency_region"
	// ProvinceTable is the table the holds the province relation/edge.
	ProvinceTable = "occurencies"
	// ProvinceInverseTable is the table name for the Province entity.
	// It exists in this package in order to avoid circular dependency with the "province" package.
	ProvinceInverseTable = "provinces"
	// ProvinceColumn is the table column denoting the province relation/edge.
	ProvinceColumn = "occurency_province"
	// DistrictTable is the table the holds the district relation/edge.
	DistrictTable = "occurencies"
	// DistrictInverseTable is the table name for the District entity.
	// It exists in this package in order to avoid circular dependency with the "district" package.
	DistrictInverseTable = "districts"
	// DistrictColumn is the table column denoting the district relation/edge.
	DistrictColumn = "occurency_district"
)

// Columns holds all SQL columns for occurency fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldReportedRecord,
	FieldResultDate,
	FieldBiologicalSex,
	FieldAge,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Occurency type.
var ForeignKeys = []string{
	"occurency_region",
	"occurency_province",
	"occurency_district",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
