// Code generated by entc, DO NOT EDIT.

package bedrecord

const (
	// Label holds the string label denoting the bedrecord type in the database.
	Label = "bed_record"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldReportedDate holds the string denoting the reporteddate field in the database.
	FieldReportedDate = "reported_date"
	// FieldCollectedDate holds the string denoting the collecteddate field in the database.
	FieldCollectedDate = "collected_date"
	// FieldBusyBeds holds the string denoting the busybeds field in the database.
	FieldBusyBeds = "busy_beds"
	// FieldAvailableBeds holds the string denoting the availablebeds field in the database.
	FieldAvailableBeds = "available_beds"
	// FieldTotalBeds holds the string denoting the totalbeds field in the database.
	FieldTotalBeds = "total_beds"
	// FieldKindBed holds the string denoting the kindbed field in the database.
	FieldKindBed = "kind_bed"
	// FieldKindAge holds the string denoting the kindage field in the database.
	FieldKindAge = "kind_age"

	// EdgePlaces holds the string denoting the places edge name in mutations.
	EdgePlaces = "places"

	// Table holds the table name of the bedrecord in the database.
	Table = "bed_records"
	// PlacesTable is the table the holds the places relation/edge. The primary key declared below.
	PlacesTable = "bed_record_places"
	// PlacesInverseTable is the table name for the Place entity.
	// It exists in this package in order to avoid circular dependency with the "place" package.
	PlacesInverseTable = "places"
)

// Columns holds all SQL columns for bedrecord fields.
var Columns = []string{
	FieldID,
	FieldReportedDate,
	FieldCollectedDate,
	FieldBusyBeds,
	FieldAvailableBeds,
	FieldTotalBeds,
	FieldKindBed,
	FieldKindAge,
}

var (
	// PlacesPrimaryKey and PlacesColumn2 are the table columns denoting the
	// primary key for the places relation (M2M).
	PlacesPrimaryKey = []string{"bed_record_id", "place_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
