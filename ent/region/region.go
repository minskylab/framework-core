// Code generated by entc, DO NOT EDIT.

package region

const (
	// Label holds the string label denoting the region type in the database.
	Label = "region"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"

	// EdgeOrganization holds the string denoting the organization edge name in mutations.
	EdgeOrganization = "organization"
	// EdgeProvince holds the string denoting the province edge name in mutations.
	EdgeProvince = "province"

	// Table holds the table name of the region in the database.
	Table = "regions"
	// OrganizationTable is the table the holds the organization relation/edge. The primary key declared below.
	OrganizationTable = "organization_region"
	// OrganizationInverseTable is the table name for the Organization entity.
	// It exists in this package in order to avoid circular dependency with the "organization" package.
	OrganizationInverseTable = "organizations"
	// ProvinceTable is the table the holds the province relation/edge. The primary key declared below.
	ProvinceTable = "region_province"
	// ProvinceInverseTable is the table name for the Province entity.
	// It exists in this package in order to avoid circular dependency with the "province" package.
	ProvinceInverseTable = "provinces"
)

// Columns holds all SQL columns for region fields.
var Columns = []string{
	FieldID,
	FieldName,
}

var (
	// OrganizationPrimaryKey and OrganizationColumn2 are the table columns denoting the
	// primary key for the organization relation (M2M).
	OrganizationPrimaryKey = []string{"organization_id", "region_id"}
	// ProvincePrimaryKey and ProvinceColumn2 are the table columns denoting the
	// primary key for the province relation (M2M).
	ProvincePrimaryKey = []string{"region_id", "province_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
