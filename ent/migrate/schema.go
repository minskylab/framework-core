// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BedRecordsColumns holds the columns for the "bed_records" table.
	BedRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "busy_covid_beds", Type: field.TypeInt},
		{Name: "available_covid_beds", Type: field.TypeInt},
	}
	// BedRecordsTable holds the schema information for the "bed_records" table.
	BedRecordsTable = &schema.Table{
		Name:        "bed_records",
		Columns:     BedRecordsColumns,
		PrimaryKey:  []*schema.Column{BedRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// DistrictsColumns holds the columns for the "districts" table.
	DistrictsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// DistrictsTable holds the schema information for the "districts" table.
	DistrictsTable = &schema.Table{
		Name:        "districts",
		Columns:     DistrictsColumns,
		PrimaryKey:  []*schema.Column{DistrictsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// OrganizationsColumns holds the columns for the "organizations" table.
	OrganizationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "code", Type: field.TypeString},
		{Name: "ubigeo", Type: field.TypeString},
		{Name: "kind", Type: field.TypeString, Nullable: true},
		{Name: "covid_zone", Type: field.TypeBool, Nullable: true},
		{Name: "category", Type: field.TypeString, Nullable: true},
	}
	// OrganizationsTable holds the schema information for the "organizations" table.
	OrganizationsTable = &schema.Table{
		Name:        "organizations",
		Columns:     OrganizationsColumns,
		PrimaryKey:  []*schema.Column{OrganizationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// OxygenRecordsColumns holds the columns for the "oxygen_records" table.
	OxygenRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "total_cylinders", Type: field.TypeInt},
		{Name: "total_own_cylinders", Type: field.TypeInt},
	}
	// OxygenRecordsTable holds the schema information for the "oxygen_records" table.
	OxygenRecordsTable = &schema.Table{
		Name:        "oxygen_records",
		Columns:     OxygenRecordsColumns,
		PrimaryKey:  []*schema.Column{OxygenRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ProvincesColumns holds the columns for the "provinces" table.
	ProvincesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// ProvincesTable holds the schema information for the "provinces" table.
	ProvincesTable = &schema.Table{
		Name:        "provinces",
		Columns:     ProvincesColumns,
		PrimaryKey:  []*schema.Column{ProvincesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RegionsColumns holds the columns for the "regions" table.
	RegionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// RegionsTable holds the schema information for the "regions" table.
	RegionsTable = &schema.Table{
		Name:        "regions",
		Columns:     RegionsColumns,
		PrimaryKey:  []*schema.Column{RegionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// OrganizationRegionColumns holds the columns for the "organization_region" table.
	OrganizationRegionColumns = []*schema.Column{
		{Name: "organization_id", Type: field.TypeInt},
		{Name: "region_id", Type: field.TypeInt},
	}
	// OrganizationRegionTable holds the schema information for the "organization_region" table.
	OrganizationRegionTable = &schema.Table{
		Name:       "organization_region",
		Columns:    OrganizationRegionColumns,
		PrimaryKey: []*schema.Column{OrganizationRegionColumns[0], OrganizationRegionColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "organization_region_organization_id",
				Columns: []*schema.Column{OrganizationRegionColumns[0]},

				RefColumns: []*schema.Column{OrganizationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "organization_region_region_id",
				Columns: []*schema.Column{OrganizationRegionColumns[1]},

				RefColumns: []*schema.Column{RegionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// OrganizationProvinceColumns holds the columns for the "organization_province" table.
	OrganizationProvinceColumns = []*schema.Column{
		{Name: "organization_id", Type: field.TypeInt},
		{Name: "province_id", Type: field.TypeInt},
	}
	// OrganizationProvinceTable holds the schema information for the "organization_province" table.
	OrganizationProvinceTable = &schema.Table{
		Name:       "organization_province",
		Columns:    OrganizationProvinceColumns,
		PrimaryKey: []*schema.Column{OrganizationProvinceColumns[0], OrganizationProvinceColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "organization_province_organization_id",
				Columns: []*schema.Column{OrganizationProvinceColumns[0]},

				RefColumns: []*schema.Column{OrganizationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "organization_province_province_id",
				Columns: []*schema.Column{OrganizationProvinceColumns[1]},

				RefColumns: []*schema.Column{ProvincesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// OrganizationDistrictColumns holds the columns for the "organization_district" table.
	OrganizationDistrictColumns = []*schema.Column{
		{Name: "organization_id", Type: field.TypeInt},
		{Name: "district_id", Type: field.TypeInt},
	}
	// OrganizationDistrictTable holds the schema information for the "organization_district" table.
	OrganizationDistrictTable = &schema.Table{
		Name:       "organization_district",
		Columns:    OrganizationDistrictColumns,
		PrimaryKey: []*schema.Column{OrganizationDistrictColumns[0], OrganizationDistrictColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "organization_district_organization_id",
				Columns: []*schema.Column{OrganizationDistrictColumns[0]},

				RefColumns: []*schema.Column{OrganizationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "organization_district_district_id",
				Columns: []*schema.Column{OrganizationDistrictColumns[1]},

				RefColumns: []*schema.Column{DistrictsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// OrganizationOxygenRecordsColumns holds the columns for the "organization_oxygenRecords" table.
	OrganizationOxygenRecordsColumns = []*schema.Column{
		{Name: "organization_id", Type: field.TypeInt},
		{Name: "oxygen_record_id", Type: field.TypeInt},
	}
	// OrganizationOxygenRecordsTable holds the schema information for the "organization_oxygenRecords" table.
	OrganizationOxygenRecordsTable = &schema.Table{
		Name:       "organization_oxygenRecords",
		Columns:    OrganizationOxygenRecordsColumns,
		PrimaryKey: []*schema.Column{OrganizationOxygenRecordsColumns[0], OrganizationOxygenRecordsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "organization_oxygenRecords_organization_id",
				Columns: []*schema.Column{OrganizationOxygenRecordsColumns[0]},

				RefColumns: []*schema.Column{OrganizationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "organization_oxygenRecords_oxygen_record_id",
				Columns: []*schema.Column{OrganizationOxygenRecordsColumns[1]},

				RefColumns: []*schema.Column{OxygenRecordsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// OrganizationBedRecordsColumns holds the columns for the "organization_bedRecords" table.
	OrganizationBedRecordsColumns = []*schema.Column{
		{Name: "organization_id", Type: field.TypeInt},
		{Name: "bed_record_id", Type: field.TypeInt},
	}
	// OrganizationBedRecordsTable holds the schema information for the "organization_bedRecords" table.
	OrganizationBedRecordsTable = &schema.Table{
		Name:       "organization_bedRecords",
		Columns:    OrganizationBedRecordsColumns,
		PrimaryKey: []*schema.Column{OrganizationBedRecordsColumns[0], OrganizationBedRecordsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "organization_bedRecords_organization_id",
				Columns: []*schema.Column{OrganizationBedRecordsColumns[0]},

				RefColumns: []*schema.Column{OrganizationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "organization_bedRecords_bed_record_id",
				Columns: []*schema.Column{OrganizationBedRecordsColumns[1]},

				RefColumns: []*schema.Column{BedRecordsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProvinceDistrictColumns holds the columns for the "province_district" table.
	ProvinceDistrictColumns = []*schema.Column{
		{Name: "province_id", Type: field.TypeInt},
		{Name: "district_id", Type: field.TypeInt},
	}
	// ProvinceDistrictTable holds the schema information for the "province_district" table.
	ProvinceDistrictTable = &schema.Table{
		Name:       "province_district",
		Columns:    ProvinceDistrictColumns,
		PrimaryKey: []*schema.Column{ProvinceDistrictColumns[0], ProvinceDistrictColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "province_district_province_id",
				Columns: []*schema.Column{ProvinceDistrictColumns[0]},

				RefColumns: []*schema.Column{ProvincesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "province_district_district_id",
				Columns: []*schema.Column{ProvinceDistrictColumns[1]},

				RefColumns: []*schema.Column{DistrictsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// RegionProvinceColumns holds the columns for the "region_province" table.
	RegionProvinceColumns = []*schema.Column{
		{Name: "region_id", Type: field.TypeInt},
		{Name: "province_id", Type: field.TypeInt},
	}
	// RegionProvinceTable holds the schema information for the "region_province" table.
	RegionProvinceTable = &schema.Table{
		Name:       "region_province",
		Columns:    RegionProvinceColumns,
		PrimaryKey: []*schema.Column{RegionProvinceColumns[0], RegionProvinceColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "region_province_region_id",
				Columns: []*schema.Column{RegionProvinceColumns[0]},

				RefColumns: []*schema.Column{RegionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "region_province_province_id",
				Columns: []*schema.Column{RegionProvinceColumns[1]},

				RefColumns: []*schema.Column{ProvincesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BedRecordsTable,
		DistrictsTable,
		OrganizationsTable,
		OxygenRecordsTable,
		ProvincesTable,
		RegionsTable,
		OrganizationRegionTable,
		OrganizationProvinceTable,
		OrganizationDistrictTable,
		OrganizationOxygenRecordsTable,
		OrganizationBedRecordsTable,
		ProvinceDistrictTable,
		RegionProvinceTable,
	}
)

func init() {
	OrganizationRegionTable.ForeignKeys[0].RefTable = OrganizationsTable
	OrganizationRegionTable.ForeignKeys[1].RefTable = RegionsTable
	OrganizationProvinceTable.ForeignKeys[0].RefTable = OrganizationsTable
	OrganizationProvinceTable.ForeignKeys[1].RefTable = ProvincesTable
	OrganizationDistrictTable.ForeignKeys[0].RefTable = OrganizationsTable
	OrganizationDistrictTable.ForeignKeys[1].RefTable = DistrictsTable
	OrganizationOxygenRecordsTable.ForeignKeys[0].RefTable = OrganizationsTable
	OrganizationOxygenRecordsTable.ForeignKeys[1].RefTable = OxygenRecordsTable
	OrganizationBedRecordsTable.ForeignKeys[0].RefTable = OrganizationsTable
	OrganizationBedRecordsTable.ForeignKeys[1].RefTable = BedRecordsTable
	ProvinceDistrictTable.ForeignKeys[0].RefTable = ProvincesTable
	ProvinceDistrictTable.ForeignKeys[1].RefTable = DistrictsTable
	RegionProvinceTable.ForeignKeys[0].RefTable = RegionsTable
	RegionProvinceTable.ForeignKeys[1].RefTable = ProvincesTable
}
